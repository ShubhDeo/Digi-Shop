{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","cart","cartItems","shippingAddress","paymentMethod","item","existItem","find","x","map","filter","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","userList","users","userDelete","userUpdate","productDelete","productCreate","productUpdate","orderList","orderDeliver","productReviewCreate","productTopRated","cartItemsFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","token","config","headers","Authorization","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","isAdmin","NavDropdown","title","Item","Link","href","onClick","removeItem","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","pageNumber","listProductDetails","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","Paginate","Pagination","Array","keys","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","cm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","errorProductReview","successProductReview","alert","ListGroup","description","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","rouned","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","userId","confirm","delete","UserEditScreen","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingCreate","errorCreate","successCreate","createdProduct","loadingDelete","errorDelete","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.837fe82e.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedCreateReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedCreateReducer\r\n})\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n// taking items from the local storage.\r\n\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst paymentMthodFromLocalStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromLocalStorage, shippingAddress: shippingAddressFromLocalStorage, paymentMethod: paymentMthodFromLocalStorage }, //sets up the initial state.\r\n    userLogin: { userInfo: userInfoFromLocalStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer, initialState, composeWithDevTools(\r\n    applyMiddleware(...middleware)\r\n))\r\n\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants.js'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedCreateReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {}, paymentMethod: '' }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product) //item in the cart exists or not\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_REQUEST,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_UPDATE_REQUEST,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return { loading: false, success: true, order: action.payload }\r\n        case ORDER_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return { loading: false, order: action.payload }\r\n        case ORDER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_PAY_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case ORDER_PAY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_LIST_SUCCESS:\r\n            return { loading: false, success: true, orders: action.payload }\r\n        case ORDER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case ORDER_DELIVER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n        const { token } = getState().userLogin.userInfo\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\r\n\r\n        const { token } = getState().userLogin.userInfo\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_LIST_REQUEST })\r\n\r\n        const { token } = getState().userLogin.userInfo\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const deleteUser = (userId) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DELETE_REQUEST })\r\n\r\n        const { token } = getState().userLogin.userInfo\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        await axios.delete(`/api/users/${userId}`, config)\r\n\r\n        dispatch({ type: USER_DELETE_SUCCESS })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_REQUEST })\r\n\r\n        const { token } = getState().userLogin.userInfo\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={e => setKeyword(e.target.value)}\r\n                placeholder='Search Products...'\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n            <Button type='submit' variant='outline-success'>Search</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\n\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'><Navbar.Brand>Digi Shop</Navbar.Brand></LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        {/* As searchbox component cannot access history */}\r\n                        <Route render={({ history }) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ml-auto\">\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                            <LinkContainer to='/cart'><Nav.Link href=\"/cart\"><i className=\"fas fa-shopping-cart\"></i>CART</Nav.Link></LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'><Nav.Link href=\"/login\"><i className=\"fas fa-user\"></i>SIGN IN</Nav.Link></LinkContainer>\r\n                                )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Digi Shop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{ color }} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n                <i style={{ color }} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n                <i style={{ color }} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n                <i style={{ color }} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n                <i style={{ color }} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'><strong>{product.name}</strong></Card.Title>\r\n                </Link>\r\n                <Card.Text as='div'>\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants.js'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border'\r\n            role='status'\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: '0 auto',\r\n                display: 'block'\r\n            }}>\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n\r\n    return pages > 1 && (\r\n        <Pagination className='mt-4'>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` :\r\n                        `/admin/productlist/${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector((state) => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map((product) => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <div className='car-img'>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </div>\r\n                                <Carousel.Caption className='carousel-caption'>\r\n                                    <h2>\r\n                                        {product.name} (${product.price})\r\n                                    </h2>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n}\r\n\r\nexport default ProductCarousel","import React, { useEffect } from 'react'\r\nimport Product from '../components/Product'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n\r\n    return (\r\n        <>\r\n            {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n            <h1>Latest Products</h1>\r\n\r\n            {loading ? <Loader /> : error ? <Message variant='danger' children={error} /> :\r\n                (\r\n                    <>\r\n                        <Row>\r\n                            {products.map((product) => (\r\n                                <Col key={product._id} cm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { error: errorProductReview, success: successProductReview } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            alert('Review submitted!!')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>Go Back</Link>\r\n            {loading ? <Loader /> : error ? <Message variant='danger' children={error} /> :\r\n                (\r\n                    <>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h3>{product.name}</h3>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        Price: ${product.price}\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        Descripton: ${product.description}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <Card>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    Price:\r\n                                    </Col>\r\n                                                <Col>\r\n                                                    <strong>${product.price}</strong>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    Status:\r\n                                    </Col>\r\n                                                <Col>\r\n                                                    {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {product.countInStock > 0 && (\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Qty</Col>\r\n                                                    <Col>\r\n                                                        <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                                            {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                                <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                            ))}\r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Button\r\n                                                className='btn-block'\r\n                                                type='button'\r\n                                                onClick={addToCartHandler}\r\n                                                disabled={product.countInStock === 0}\r\n                                            >Add to cart</Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h2>Reviews</h2>\r\n                                {product.reviews.length === 0 && <Message>No reviews</Message>}\r\n                                <ListGroup variant='flush'>\r\n                                    {product.reviews.map(review => (\r\n                                        <ListGroup.Item key={review._id}>\r\n                                            <strong>{review.name}</strong>\r\n                                            <Rating value={review.rating} />\r\n                                            <p>{review.createdAt.substring(0, 10)}</p>\r\n                                            <p>{review.comment}</p>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                    <ListGroup.Item>\r\n                                        <h2>Write a Customer Review</h2>\r\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                        {userInfo ? (\r\n                                            <Form onSubmit={submitHandler}>\r\n                                                <Form.Group controlId='rating'>\r\n                                                    <Form.Label>Rating</Form.Label>\r\n                                                    <Form.Control as='select' value={rating} onChange={e => setRating(e.target.value)} >\r\n                                                        <option value=''>Select ...</option>\r\n                                                        <option value='1'>1 - Poor</option>\r\n                                                        <option value='2'>2 - Fair</option>\r\n                                                        <option value='3'>3 - Good</option>\r\n                                                        <option value='4'>4 - Very Good</option>\r\n                                                        <option value='5'>5 - Excellent</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId='comment'>\r\n                                                    <Form.Label>Comment</Form.Label>\r\n                                                    <Form.Control as='textarea' row='3' value={comment} onChange={e => setComment(e.target.value)}>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                                <Button type='submit' variant='primary'>\r\n                                                    Submit\r\n                                                 </Button>\r\n                                            </Form>\r\n                                        ) : <Message>Please <Link to='/login'>sign in</Link> to write a review</Message>}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => { // adding a function within a function ..by redux thunk..helps in writing async logic to interact with the store.\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems)) // saving in the local storage.\r\n\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1   // query params\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go Back</Link></Message> :\r\n                    (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={2}>${item.price}</Col>\r\n                                        <Col md={2}>\r\n                                            <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                                {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )\r\n                }\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                             ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='block' disabled={cartItems.length === 0} onClick={checkoutHandler}>Proceed To Checkout</Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n\r\n\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>{children}</Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { login } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //DISPATCH LOGIN\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer ? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //DISPATCH REGISTER\r\n        if (password !== confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Sign Up</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an account ? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, orders, error: errorOrders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //DISPATCH REGISTER\r\n        if (password !== confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            //DISPATCH UPDATE PROFILE\r\n            dispatch(updateUserProfile({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>USER PROFILE</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated!!</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>MY ORDERS</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>Total </th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id} >\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\r\n                                    <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant='light'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_REQUEST\r\n} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_CREATE_REQUEST })\r\n\r\n        const { token } = getState().userLogin.userInfo\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DETAILS_REQUEST })\r\n\r\n        const { token } = getState().userLogin.userInfo\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_PAY_REQUEST })\r\n\r\n        const { token } = getState().userLogin.userInfo\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DELIVER_REQUEST })\r\n\r\n        const { token } = getState().userLogin.userInfo\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //DISPATCH SHIPPING ADDRESS\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            postalCode,\r\n            country\r\n        }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shippping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Address' value={address} onChange={(e) => setAddress(e.target.value)} required></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter City' value={city} onChange={(e) => setCity(e.target.value)} required ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Postal Code' value={postalCode} onChange={(e) => setPostalCode(e.target.value)} required></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Country' value={country} onChange={(e) => setCountry(e.target.value)} required></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    const dispatch = useDispatch()\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //DISPATCH PAYMENT METHOD\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check type='radio' label='Paypal or Credit Card' id='Paypal' name='paymentMethod' value='Paypal' checked onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Check type='radio' label='Cash On Delivery' id='COD' name='paymentMethod' value='Cash On Delivery' onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    //Calculate prices\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 50)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\r\n\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        // eslint-disable-next-line\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderSubmitHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address},{cart.shippingAddress.city},\r\n                              {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}><Image src={item.image} alt={item.name} fluid rouned /></Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x {item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item><h2>Order Summary</h2></ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items Price</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems.length === 0}\r\n                                    onClick={placeOrderSubmitHandler}\r\n                                >Place Order</Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n    getOrderDetails,\r\n    payOrder,\r\n    deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n    ORDER_PAY_RESET,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading) {\r\n        //   Calculate prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay || successDeliver || order._id !== orderId) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, orderId, successPay, successDeliver, order, userInfo, history])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong> {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong>{' '}\r\n                                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                                {order.shippingAddress.postalCode},{' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>\r\n                                    Delivered on {order.deliveredAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant='danger'>Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='danger'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? (\r\n                                <Message>Order is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo &&\r\n                                userInfo.isAdmin &&\r\n                                order.isPaid &&\r\n                                !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                    </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen","import React, { useEffect } from 'react'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, users, error } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='dannger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? <i className='fas fa-check' style={{ color: 'green' }}></i> : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/users/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'><i className='fas fa-edit'></i></Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => { deleteHandler(user._id) }}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if (!user || !user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [dispatch, user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({\r\n            _id: userId,\r\n            name,\r\n            email,\r\n            isAdmin\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>Go Back</Link>\r\n\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <FormContainer>\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Check type='checkbox' label='Is Admin' checked={isAdmin} onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>Update</Button>\r\n                    </Form>\r\n                </FormContainer>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\nimport Paginate from '../components/Paginate'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, products, error, pages, page } = productList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) { //check for admin\r\n            history.push('/login')\r\n        }\r\n        if (successCreate) {\r\n            history.push(`/admin/products/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n            //DELETE PRODUCT\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct()) //CREATE PRODUCT\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className=\"my-3\" onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='dannger'>{error}</Message> : (\r\n                <>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>$ {product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/products/${product._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'><i className='fas fa-edit'></i></Button>\r\n                                        </LinkContainer>\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => { deleteHandler(product._id) }}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate isAdmin={true} pages={pages} page={page} />\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate)\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n            updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                image,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock,\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n      </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type='name'\r\n                                        placeholder='Enter name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='price'>\r\n                                    <Form.Label>Price</Form.Label>\r\n                                    <Form.Control\r\n                                        type='number'\r\n                                        placeholder='Enter price'\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='image'>\r\n                                    <Form.Label>Image</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter image url'\r\n                                        value={image}\r\n                                        onChange={(e) => setImage(e.target.value)}\r\n                                    ></Form.Control>\r\n                                    <Form.File\r\n                                        id='image-file'\r\n                                        label='Choose File'\r\n                                        custom\r\n                                        onChange={uploadFileHandler}\r\n                                    ></Form.File>\r\n                                    {uploading && <Loader />}\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='brand'>\r\n                                    <Form.Label>Brand</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter brand'\r\n                                        value={brand}\r\n                                        onChange={(e) => setBrand(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='countInStock'>\r\n                                    <Form.Label>Count In Stock</Form.Label>\r\n                                    <Form.Control\r\n                                        type='number'\r\n                                        placeholder='Enter countInStock'\r\n                                        value={countInStock}\r\n                                        onChange={(e) => setCountInStock(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='category'>\r\n                                    <Form.Label>Category</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter category'\r\n                                        value={category}\r\n                                        onChange={(e) => setCategory(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='description'>\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter description'\r\n                                        value={description}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='primary'>\r\n                                    Update\r\n            </Button>\r\n                            </Form>\r\n                        )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, orders, error } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>$ {order.totalPrice}</td>\r\n                                <td>{order.isPaid ? (order.paidAt.substring(0, 10)) : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\r\n                                <td>{order.isDelivered ? (order.deliveredAt.substring(0, 10)) : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\r\n\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant='light' className='btn-sm'>Details</Button>\r\n                                    </LinkContainer>\r\n\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path={`/admin/users/:id/edit`} component={UserEditScreen} />\n          <Route path={`/admin/products/:id/edit`} component={ProductEditScreen} />\n          <Route path={`/admin/productlist`} component={ProductListScreen} exact />\n          <Route path={`/admin/productlist/:pageNumber`} component={ProductListScreen} exact />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}